{"version":3,"sources":["webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/dist/js/swiper.esm.bundle.js"],"names":["doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","this","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","self","i","length","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","attrs","value","arguments","getAttribute","attrName","removeAttr","removeAttribute","dom7_modular_data","key","el","dom7ElementDataStorage","dataKey","dom7_modular_transform","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","dom7proxy","trigger","evt","detail","bubbles","cancelable","filter","data","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","dom7_modular_outerWidth","includeMargins","styles","offsetWidth","parseFloat","dom7_modular_outerHeight","offsetHeight","dom7_modular_offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","dom7_modular_html","dom7_modular_text","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","dom7_modular_index","child","previousSibling","eq","index","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","dom7_modular_parent","parentNode","parent","closest","find","foundElements","found","removeChild","toAdd","fn","prototype","Class","Methods","outerWidth","outerHeight","offset","Object","keys","forEach","methodName","Utils","obj","object","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","o","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","isObject","extend","swiper_esm_bundle_Support","testDiv","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","swiper_esm_bundle_Browser","isSafari","ua","toLowerCase","isIE","isEdge","isUiWebView","test","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","f7proxy","eventHandler","Array","isArray","slice","eventsArray","instanceParams","instance","modules","moduleName","module","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","components","use","name","proto","static","install","m","installModule","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","slidesPerGroup","groupIndex","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","centeredSlides","abs","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","isVisible","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","initialized","runCallbacksOnInit","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","update","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","x","y","z","newProgress","previousTranslate","swiper_esm_bundle_translate","transitionStart","runCallbacks","direction","autoHeight","dir","swiper_esm_bundle_transitionEnd","animating","swiper_esm_bundle_transition","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","nextSnap","slidesPerViewDynamic","slideToIndex","nextTick","swiper_esm_bundle_slide","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","snapTranslate","diff","slideChanged","loopDestroy","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","grabCursor","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","manipulation","swiper_esm_bundle_Device","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","freeMode","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","freeModeMomentumBounceRatio","needsLoopFix","freeModeMomentumBounce","freeModeSticky","once","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onResize","breakpoints","setBreakpoint","newTranslate","min","autoplay","running","paused","run","swiper_esm_bundle_onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","attachEvents","touchEvents","wrapperEl","onClick","touchEventsTarget","start","passiveListeners","passive","move","end","detachEvents","swiper_esm_bundle_events","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","directionChanged","needsReLoop","changeDirection","points","point","sort","b","breakpointsInverse","innerWidth","swiper_esm_bundle_breakpoints","addClasses","classNames","suffixes","suffix","containerModifierClass","removeClasses","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","preloadImages","imagesLoaded","imagesToLoad","updateOnImagesReady","currentSrc","swiper_esm_bundle_images","wasLocked","navigation","checkOverflow$1","defaults","init","uniqueNavElements","wrapperClass","prototypes","images","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","observeSlideChildren","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","numberOfNewSlides","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","isEventSupported","isSupported","element","implementation","hasFeature","Mousewheel","lastScrollTime","PIXEL_STEP","LINE_HEIGHT","PAGE_HEIGHT","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Mousewheel$1","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","onNextClick","onPrevClick","Navigation$1","hideOnClick","hiddenClass","isHidden","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","Pagination$1","number","render","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","clientX","clientY","dragStartPos","positionRatio","getPointerPosition","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Scrollbar$1","Parallax","p","currentOpacity","currentScale","parallax","setTransform","parallaxEl","$parallaxEl","parallaxDuration","Parallax$1","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Zoom$1","onTransitionEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Lazy$1","loadOnTransitionStart","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","Controller$1","a11y","role","label","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","disableEl","enableEl","bulletEl","$bulletEl","makeElFocusable","addElRole","addElLabel","paginationBulletMessage","onEnterKey","A11y","notificationClass","updateNavigation","updatePagination","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","slideHistory","History$1","setHistory","HashNavigation","newHash","activeSlideHash","slideHash","watchState","onHashCange","HashNavigation$1","setHash","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","waitForTransition","Autoplay$1","disableOnInteraction","pause","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","EffectFade","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","EffectCube","Flip","flipEffect","limitRotation","rotate","rotateY","rotateX","zIndex","EffectFlip","Coverflow","coverflowEffect","center","depth","slideOffset","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","ws","perspectiveOrigin","EffectCoverflow","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","Thumbs$1","__webpack_exports__"],"mappings":"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","file":"js/home~newProduct~place.fa1391e6.js","sourcesContent":["/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n","/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n","/**\n * Swiper 4.5.1\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2019 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: September 13, 2019\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition as transition$1, on, off, trigger, transitionEnd as transitionEnd$1, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition$1,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd$1,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = $.fn[methodName] || Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map((a) => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter((paramsPart) => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent || ('maxTouchPoints' in window.navigator && window.navigator.maxTouchPoints > 0)),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles.length; i += 1) {\n        if (styles[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach((m) => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (\n        (params.slidesPerColumnFill === 'column')\n        || (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1)\n      ) {\n        if (params.slidesPerColumnFill === 'column') {\n          column = Math.floor(i / slidesPerColumn);\n          row = i - (column * slidesPerColumn);\n          if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n            row += 1;\n            if (row >= slidesPerColumn) {\n              row = 0;\n              column += 1;\n            }\n          }\n        } else {\n          const groupIndex = Math.floor(i / params.slidesPerGroup);\n          row = Math.floor(i / params.slidesPerView) - groupIndex * params.slidesPerColumn;\n          column = i - row * params.slidesPerView - groupIndex * params.slidesPerView;\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box' && !Browser.isIE) {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box' && !Browser.isIE) {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index = swiper.activeIndex + i;\n      if (index > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size - 1)\n                || (slideAfter > 1 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map((val) => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map((val) => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      data.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    swiper.autoplay.run();\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    swiper.$el\n      .removeClass(`${swiper.params.containerModifierClass}${currentDirection} wp8-${currentDirection}`)\n      .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n    if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n    }\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40) || kc === 34)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38) || kc === 33)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 33 || kc === 34 || kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 33 || kc === 34 || kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (((kc === 34 || kc === 39) && !rtl) || ((kc === 33 || kc === 37) && rtl)) swiper.slideNext();\n      if (((kc === 33 || kc === 37) && !rtl) || ((kc === 34 || kc === 39) && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 33 || kc === 34 || kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 34 || kc === 40) swiper.slideNext();\n      if (kc === 33 || kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: (number) => number,\n      formatFractionTotal: (number) => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  getPointerPosition(e) {\n    const swiper = this;\n    if (swiper.isHorizontal()) {\n      return ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    }\n    return ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const {\n      $el,\n      dragSize,\n      trackSize,\n      dragStartPos,\n    } = scrollbar;\n\n    let positionRatio;\n    positionRatio = ((scrollbar.getPointerPosition(e)) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top']\n      - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    swiper.scrollbar.dragStartPos = (e.target === $dragEl[0] || e.target === $dragEl)\n      ? scrollbar.getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        getPointerPosition: Scrollbar.getPointerPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter((part) => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n"],"sourceRoot":""}